<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gpg on Sam Stelfox</title>
    <link>https://stelfox.net/tags/gpg/</link>
    <description>Recent content in gpg on Sam Stelfox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>sam@stelfox.net (Sam Stelfox)</managingEditor>
    <webMaster>sam@stelfox.net (Sam Stelfox)</webMaster>
    <lastBuildDate>Mon, 04 Dec 2017 11:38:01 -0500</lastBuildDate><atom:link href="https://stelfox.net/tags/gpg/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unusable Secret Key</title>
      <link>https://stelfox.net/blog/2017/12/unusable-secret-key/</link>
      <pubDate>Mon, 04 Dec 2017 11:38:01 -0500</pubDate>
      <author>sam@stelfox.net (Sam Stelfox)</author>
      <guid>https://stelfox.net/blog/2017/12/unusable-secret-key/</guid>
      <description>I use a Yubikey NEO to store subkeys used for signing and authentication. I started experiencing a weird issue with it. It coincided with me rebuilding my system so diagnosing it ended up being harder than normal. The behavior I experienced allowed me to use the key to authenticate (SSH&amp;rsquo;ing worked fine) but any attempt to sign new data resulted in an &amp;lsquo;Unusuable secret key&amp;rsquo; error. For git this resulted in the following message:</description>
    </item>
    
    <item>
      <title>GPG Process Notes</title>
      <link>https://stelfox.net/notes/gpg-process-notes/</link>
      <pubDate>Mon, 09 Oct 2017 23:35:34 +0000</pubDate>
      <author>sam@stelfox.net (Sam Stelfox)</author>
      <guid>https://stelfox.net/notes/gpg-process-notes/</guid>
      <description>I followed the TAILS setup guide to get a secure offline environment running to perform this generation task. The steps I took are documented in the tails document.
Initial Key Creation For simplicity I wanted to clear out the GnuPG configuration that starts out in place. Makes things a lot nicer later on.
rm -rf ~/.gnupg/* I pulled in the .gnupg/gpg.conf from my dotfiles by hand.
And begin the key generation process</description>
    </item>
    
  </channel>
</rss>

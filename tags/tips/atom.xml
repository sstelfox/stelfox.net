<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips - Sam Stelfox&#39;s Thoughts &amp; Notes</title>
    <link>https://stelfox.net/tags/tips/</link>
    <description>Recent content in Tips - Sam Stelfox&#39;s Thoughts &amp; Notes</description>
    <language>en-US</language>
    <managingEditor>Sam Stelfox</managingEditor>
    <webMaster>Sam Stelfox</webMaster><atom:link href="https://stelfox.net/tags/tips/atom.xml" rel="self" type="application/rss+xml" /><item>
      <title>Timelapse of a Linux Desktop</title>
      <link>https://stelfox.net/blog/2018/06/timelapse-of-a-linux-desktop/</link>
      <pubDate>Fri, 08 Jun 2018 16:37:39 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/06/timelapse-of-a-linux-desktop/</guid>
      <description>I have the privilege of working full remote. To stay connected with our other remote workers and the main office we keep a live video conference going all the time. It&amp;rsquo;s pretty convenient and definitely allows me to continue to feel connected with the company.
During one of our stand ups, a coworker mentioned that they&amp;rsquo;d like to see how things looked over time. I have three 1440p monitors and largely leave the video conference on my right most window, which makes recording (an audio free) timelapse pretty easy with FFmpeg.</description>
    </item><item>
      <title>Converting OpenLDAP Schemas to LDIF</title>
      <link>https://stelfox.net/blog/2018/03/converting-openldap-schemas-to-ldif/</link>
      <pubDate>Sat, 24 Mar 2018 20:20:22 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/03/converting-openldap-schemas-to-ldif/</guid>
      <description>I&amp;rsquo;ve been writing software to work against an OpenLDAP instance, with a highly customized schema. The operators of the existing system only had the schema files and searching around found several elaborate ways to convert the files which I tried with mixed success. After doing the research to figure this out, it became clear I could probably have used slapcat and have dumped the active schema directly to LDIF.
As a sample of how I converted these, I&amp;rsquo;ll use the rfc2307bis.</description>
    </item><item>
      <title>Including LDIF Files in OpenLDAP</title>
      <link>https://stelfox.net/blog/2018/03/including-ldif-files-in-openldap/</link>
      <pubDate>Sat, 24 Mar 2018 20:20:22 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/03/including-ldif-files-in-openldap/</guid>
      <description>While setting up and OpenLDAP server I found my distribution shipped with a couple of schema files, but no equivalent LDIF files. I found ways to convert the file using slapcat and slaptest and the files were valid on their own.
I was specifically trying to bootstrap an OpenLDAP server, with it&amp;rsquo;s schema, from scratch for a CI/CD system to test against. To accomplish this I was making use of the include directive in a configuration LDIF file and saw some very odd behavior.</description>
    </item><item>
      <title>Cross-Compiling Gentoo for Xilinx Boards</title>
      <link>https://stelfox.net/blog/2017/12/cross-compiling-gentoo-for-xilinx-boards/</link>
      <pubDate>Mon, 18 Dec 2017 17:49:22 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/12/cross-compiling-gentoo-for-xilinx-boards/</guid>
      <description>Note: If you&amp;rsquo;ve come here looking to build a root filesystem for 32 bit ARM devices I suspect everything but the build tuple will be the same. The issues that need to be worked around largely packaging and profile issues that should all be the same.
I got a hold of a Zynq 7100 development board, and while I&amp;rsquo;ve played with some embedded ARM microcontrollers such as the STM32F3 series and more basic RISC style microcontrollers like Atmel&amp;rsquo;s SAMD10 and Atmega lines, I&amp;rsquo;ve never played with FPGA development before so I considered this an interesting learning opportunity.</description>
    </item><item>
      <title>Converting CPIO Files to Tarballs</title>
      <link>https://stelfox.net/blog/2017/12/converting-cpio-files-to-tarballs/</link>
      <pubDate>Mon, 04 Dec 2017 22:46:56 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/12/converting-cpio-files-to-tarballs/</guid>
      <description>I needed to convert a directory full of CPIO files to tar balls. This quick script did the trick for me but didn&amp;rsquo;t preserve the user / group. Running it as root will preserve the ownership information but that wasn&amp;rsquo;t important for my immediate use case.
#!/bin/bash SRC_DIR=$(pwd) for i in *.cpio; do CPIO_TMP_DIR=&amp;quot;$(mktemp -d /tmp/cpioconv.XXXX)&amp;quot; (cd ${CPIO_TMP_DIR} &amp;amp;&amp;amp; cpio -idm &amp;lt; &amp;quot;${SRC_DIR}/${i}&amp;quot; &amp;amp;&amp;amp; tar -cf ${SRC_DIR}/${i%%.cpio}.tar .) rm -rf ${CPIO_TMP_DIR} done  </description>
    </item><item>
      <title>Unusable Secret Key</title>
      <link>https://stelfox.net/blog/2017/12/unusable-secret-key/</link>
      <pubDate>Mon, 04 Dec 2017 11:38:01 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/12/unusable-secret-key/</guid>
      <description>I use a Yubikey NEO to store subkeys used for signing and authentication. I started experiencing a weird issue with it. It coincided with me rebuilding my system so diagnosing it ended up being harder than normal. The behavior I experienced allowed me to use the key to authenticate (SSH&amp;rsquo;ing worked fine) but any attempt to sign new data resulted in an &amp;lsquo;Unusuable secret key&amp;rsquo; error. For git this resulted in the following message:</description>
    </item><item>
      <title>Downgrading Glibc in Gentoo</title>
      <link>https://stelfox.net/blog/2017/11/downgrading-glibc-in-gentoo/</link>
      <pubDate>Wed, 15 Nov 2017 12:27:45 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/downgrading-glibc-in-gentoo/</guid>
      <description>While refining some automated setup scripts at some point I upgraded to a testing/unstable version of glibc. When I attempted to get the box back on to the stable version I hit a solid protection mechanism built into the portage scripts that prevents downgrading glibc. Attempts will give you the following error message:
 * Sanity check to keep you from breaking your system: * Downgrading glibc is not supported and a sure way to destruction * ERROR: sys-libs/glibc-2.</description>
    </item><item>
      <title>File in Wrong Format</title>
      <link>https://stelfox.net/blog/2017/11/file-in-wrong-format/</link>
      <pubDate>Mon, 13 Nov 2017 13:44:00 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/file-in-wrong-format/</guid>
      <description>I have been recently attempting to cross compile a custom Gentoo profile targetting a Xilinx board as I found their distribution to be unmanageable (PetaLinux as hacked together sub-distro of Yocto). I had several issues with the default profile (embedded) conflicting with other critical packages. I&amp;rsquo;ll do a detailed post later on for building that entire root filesystem.
I came across one issue which didn&amp;rsquo;t seem to have a well-documented solution.</description>
    </item><item>
      <title>Gentoo Fstab Failure</title>
      <link>https://stelfox.net/blog/2017/11/gentoo-fstab-failure/</link>
      <pubDate>Wed, 01 Nov 2017 11:12:34 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/11/gentoo-fstab-failure/</guid>
      <description>I use Gentoo with OpenRC quite a bit both for my personal servers and as a compilation test bed for new software since I can control the dependency versions very tightly. I have a set of scripts I&amp;rsquo;ve been using for quite some time that handle setting up a hardened, fairly minimal install.
I recently encountered a weird issue with them that resulted in an esoteric error that prevented my host from fully booting and leaving the root filesystem read-only.</description>
    </item><item>
      <title>Investigating LVM From Dracut</title>
      <link>https://stelfox.net/blog/2017/10/investigating-lvm-from-dracut/</link>
      <pubDate>Tue, 24 Oct 2017 11:45:07 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/investigating-lvm-from-dracut/</guid>
      <description>In my my last post, I covered finding logical volumes that were missing from LVM from within a live CD (which is effectively a whole standard environment). Working with dracut is quite a bit more limited.
Turns out that the commands I&amp;rsquo;m normally used to for operating and inspecting LVM volumes can all be accessed as a second parameter to the lvm tool like so:
$ lvm vgscan $ lvm pvscan $ lvm lvscan For my particular issue, it led me to notice that block device of my root filesystem was missing due to a missing kernel driver&amp;hellip;</description>
    </item></channel>
</rss>

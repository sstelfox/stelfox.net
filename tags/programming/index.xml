<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on Sam Stelfox</title><link>https://stelfox.net/tags/programming/</link><description>Recent content in Programming on Sam Stelfox</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Thu, 13 Apr 2023 20:51:02 -0400</lastBuildDate><atom:link href="https://stelfox.net/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Combining "Subscribers" in Rust's Tracing Library</title><link>https://stelfox.net/blog/2023/04/combining-subscribers-in-rusts-tracing-library/</link><pubDate>Thu, 13 Apr 2023 20:51:02 -0400</pubDate><guid>https://stelfox.net/blog/2023/04/combining-subscribers-in-rusts-tracing-library/</guid><description>Tracing is a fantastic Rust library that I&amp;rsquo;ve found immensely useful, but I feel its documentation and API could still use a bit of polish. At first glance, the distinctions and roles of Subscribers, Layers, Filters, and Writers seem clear and well-documented. But when dealing with less common use cases, understanding their interactions and handling trait-based errors can become challenging.
So, I&amp;rsquo;m thinking I need multiple &amp;ldquo;Subscribers&amp;rdquo; for the various events being traced, right?</description></item></channel></rss>
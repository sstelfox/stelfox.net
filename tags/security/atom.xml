<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security - Sam Stelfox&#39;s Thoughts &amp; Notes</title>
    <link>https://stelfox.net/tags/security/</link>
    <description>Recent content in security - Sam Stelfox&#39;s Thoughts &amp; Notes</description>
    <language>en-US</language>
    <managingEditor>Sam Stelfox</managingEditor>
    <webMaster>Sam Stelfox</webMaster><atom:link href="https://stelfox.net/tags/security/atom.xml" rel="self" type="application/rss+xml" /><item>
      <title>Performance Impact of OpenVPN Port Sharing</title>
      <link>https://stelfox.net/blog/2018/11/performance-impact-of-openvpn-port-sharing/</link>
      <pubDate>Sun, 04 Nov 2018 15:09:02 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/11/performance-impact-of-openvpn-port-sharing/</guid>
      <description>I recently had cause to use OpenVPN on the standard HTTPS port to protect my traffic. This was done as a compromise with administrators who didn&amp;rsquo;t want to change their egress filtering, but wanted to allow me to continue doing my normal work.
I already run several webservers, including this one, and didn&amp;rsquo;t want to give up exclusive access to the precious TCP port 443. The recommended way to deal with this is to make use of the port-share option built into OpenVPN.</description>
    </item><item>
      <title>Run Your Own DNS-over-TLS Server</title>
      <link>https://stelfox.net/blog/2018/11/run-your-own-dns-over-tls-server/</link>
      <pubDate>Fri, 02 Nov 2018 15:09:02 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/11/run-your-own-dns-over-tls-server/</guid>
      <description>DNS-over-TLS is a relatively new privacy enhancing protocol that encrypts all of your DNS requests to a trusted server. In an age when airports, and coffee shops are outsourcing &amp;lsquo;free wifi&amp;rsquo; to corporate entities that are likely harvesting as much data as they can this is a nice addition. I largely use VPNs when connected to these access points which provides at least as good protection as DNS-over-TLS which has caused me to largely overlook this development.</description>
    </item><item>
      <title>It&#39;s Never the Firewall</title>
      <link>https://stelfox.net/blog/2018/10/its-never-the-firewall/</link>
      <pubDate>Sun, 14 Oct 2018 13:36:09 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/10/its-never-the-firewall/</guid>
      <description>This last Thursday I had the privilege of giving a talk at our local Linux User Group about diagnosing firewall issues on Linux entitled &amp;ldquo;It&amp;rsquo;s Never the Firewall: Diagnosing Linux Firewall Issues&amp;rdquo;. I really enjoyed giving the talk, however, I left a few questions unanswered. While I may do a more extensive post on everything that I went through in the talk (I have been lax on writing content for this blog), this post is more to answer the outstanding questions and of course to make my slides available.</description>
    </item><item>
      <title>Syslog-NG</title>
      <link>https://stelfox.net/notes/syslog-ng/</link>
      <pubDate>Wed, 25 Oct 2017 01:56:02 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/syslog-ng/</guid>
      <description>Syslog-NG is a fast, reliable, and secure syslog daemon that can do advanced processing and log centralization while maintaining a sane configuration file syntax. I&amp;rsquo;ve recently come to vastly prefer it over my previous long term favorite Rsyslog.
It&amp;rsquo;s important to note that when modifying the logs statements, they will be processed in order. This means log statements that finalize a message will never make it past that statement. This finalization behavior can be a great tool for optimizing the processing path of logs but can result in unexpected behavior if you don&amp;rsquo;t pay attention when re-ordering the statements.</description>
    </item><item>
      <title>CFSSL</title>
      <link>https://stelfox.net/notes/cfssl/</link>
      <pubDate>Tue, 24 Oct 2017 18:39:22 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/cfssl/</guid>
      <description>CFSSL is a toolkit of utilities for TLS PKI infrastructures and supports more functionality than I&amp;rsquo;ve personally needed. It is a fast and convenient way to setup and manage a multi-layer internal certificate authority.
I&amp;rsquo;ve used it to generate an internal root CA, with sub-CAs for internal only server certificates, and separate CAs for each domain of client certificates (such as VPN, log, mail, and LDAP servers). This allows the root CA to be protected more stringently than specific domains.</description>
    </item><item>
      <title>Vultr Deny All Firewall</title>
      <link>https://stelfox.net/blog/2017/10/vultr-deny-all-firewall/</link>
      <pubDate>Fri, 20 Oct 2017 17:18:36 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/vultr-deny-all-firewall/</guid>
      <description>While setting up new instances on Vultr for testing, I wanted to initially ensure that no traffic beyond my own could touch the instances. After adding a matching rule for SSH to my IPv4 address, a default rule shows up that drops any unspecified traffic. Switching to the IPv6 I wanted to add a drop all rule (as I wouldn&amp;rsquo;t be using IPv6 until the system was up).
The interface only allows accept rules to be created and additionally you&amp;rsquo;ll be greeted with this message while trying to figure out what to do:</description>
    </item><item>
      <title>IPTables</title>
      <link>https://stelfox.net/notes/iptables/</link>
      <pubDate>Fri, 20 Oct 2017 12:14:02 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/iptables/</guid>
      <description>iptables (and ip6tables) is a simple application for interacting directly with the Linux kernel&amp;rsquo;s netfilter firewall. nftables is attempting to replace it. nftables has better performance but is incredibly complex and difficult to use. Until the tooling and usability around nftables is addressed iptables will likely remain the reigning champion.
It is important that your systems have effective ingress and egress rules. Depending on your host OS, you&amp;rsquo;ll find your rule set stored in different locations but the following list are where I&amp;rsquo;ve seen them before:</description>
    </item><item>
      <title>Security Principles</title>
      <link>https://stelfox.net/blog/2017/10/security-principles/</link>
      <pubDate>Thu, 19 Oct 2017 05:19:12 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/security-principles/</guid>
      <description>While reviewing current security hardening practices put out by several organizations and attempting to filter the good recommendations from the outdated legislated requirements, I came across one of the best descriptions of basic security principles. You can find it in the NIST Guide to General Server Security (published in 2008).
I&amp;rsquo;ve replicated section 2.4 from the linked document (I have removed the footnotes, but it is otherwise unchanged) in its entirety here for safe keeping and to hopefully help expose this to more people.</description>
    </item><item>
      <title>Vulnerable Smart Cards</title>
      <link>https://stelfox.net/blog/2017/10/vulnerable-smart-cards/</link>
      <pubDate>Mon, 16 Oct 2017 12:25:58 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/vulnerable-smart-cards/</guid>
      <description>In addition to the WiFi vulnerability a much more limited vulnerability was announced around private GPG keys that were generated using Infineon&amp;rsquo;s RSA Library version v1.02.013.
The vulnerability lies in shortcuts taken to speed up the key generation using the library. The performance increase makes the private key vulnerable to factorization attacks using an extension to Coppersmith&amp;rsquo;s attack.
It has been confirmed that YubiKey 4s are effected as are many nations national ID cards.</description>
    </item><item>
      <title>A KRACK In the Defenses</title>
      <link>https://stelfox.net/blog/2017/10/a-krack-in-the-defenses/</link>
      <pubDate>Mon, 16 Oct 2017 08:23:43 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/10/a-krack-in-the-defenses/</guid>
      <description>An advisory from US CERT has been circulating for the last week about a protocol level flaw in WPA &amp;amp; WPA2. The advisory itself was:
 US-CERT has become aware of several key management vulnerabilities in the 4-way handshake of the Wi-Fi Protected Access II (WPA2) security protocol. The impact of exploiting these vulnerabilities includes decryption, packet replay, TCP connection hijacking, HTTP content injection, and others. Note that as protocol-level issues, most or all correct implementations of the standard will be affected.</description>
    </item><item>
      <title>Auditd</title>
      <link>https://stelfox.net/notes/auditd/</link>
      <pubDate>Thu, 12 Oct 2017 15:33:21 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/auditd/</guid>
      <description>Auditd collects any configured syscall execution with critical security metadata associated with the event. This can help enrich other security tools such as AIDE to determine what user and process are responsible for the change.
For reliable operation the rules should be carefully tuned to your system. Tracking every write to disk will generate an unreasonable amount of events and depending on the configuration of the kernel&amp;rsquo;s audit subsystem, may trigger a kernel panic.</description>
    </item><item>
      <title>AIDE</title>
      <link>https://stelfox.net/notes/aide/</link>
      <pubDate>Wed, 11 Oct 2017 02:19:45 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/aide/</guid>
      <description>AIDE (Advanced Intrusion Detection Environment) is a file and directory integrity checker that compares the current hashes, permissions, and attributes of files directories against a known database built from the system.
This can be run periodically to detect manipulation of critical system files, though a motivated attacker with an appropriate level of permissions could modify this database or disable the check as long as the system is able to write to it.</description>
    </item><item>
      <title>Yubikey</title>
      <link>https://stelfox.net/notes/yubikey/</link>
      <pubDate>Tue, 10 Oct 2017 00:28:32 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/yubikey/</guid>
      <description>NEO dnf install ykpers -y ykpersonalize -m82  Unplug and replug it back in and it should be usable as a smartcard.
NFC / HTTP Auth dnf install ykpers -y ykpersonalize -n https://api.stelfox.net/sessions/yknfc?t=  This will hit the API with a URL like:
https://api.stelfox.net/session/yknfc?t=ccccccuddclhrkuvurcufviveulljleihvreukifegjh  The API can then return a token that for accessing additional functionality.
Resetting This will wipe all keys, user, and admin pins on the card.</description>
    </item><item>
      <title>GPG Process Notes</title>
      <link>https://stelfox.net/notes/gpg-process-notes/</link>
      <pubDate>Mon, 09 Oct 2017 23:35:34 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/gpg-process-notes/</guid>
      <description>I followed the TAILS setup guide to get a secure offline environment running to perform this generation task. The steps I took are documented in the tails document.
Initial Key Creation For simplicity I wanted to clear out the GnuPG configuration that starts out in place. Makes things a lot nicer later on.
rm -rf ~/.gnupg/*  I pulled in the .gnupg/gpg.conf from my dotfiles by hand.
And begin the key generation process</description>
    </item><item>
      <title>Better Practices With Sudo</title>
      <link>https://stelfox.net/blog/2016/02/better-practices-with-sudo/</link>
      <pubDate>Fri, 26 Feb 2016 17:45:22 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2016/02/better-practices-with-sudo/</guid>
      <description>&lt;p&gt;I work with a lot of different linux machines from embedded devices, to cloud
servers and open stack hosts. For many of them I&amp;rsquo;m either the sole
administrator or one of three or less with administrative access. Where there
are multiple administrative users, we all are generally working as backups to
each other. We use sudo whenever we need to execute a task with privileges on
any of these machines with no direct root login permitted remotely.&lt;/p&gt;

&lt;p&gt;I must confess I have established two habits over time that are against best
practices with regard to sudo; Using it to execute a root shell only, and not
restricting which commands can be run with sudo.&lt;/p&gt;</description>
    </item><item>
      <title>SPF &amp; DKIM Records in Route 53</title>
      <link>https://stelfox.net/blog/2014/07/spf-and-dkim-records-in-route-53/</link>
      <pubDate>Wed, 30 Jul 2014 10:46:13 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2014/07/spf-and-dkim-records-in-route-53/</guid>
      <description>I&amp;rsquo;m going to do a more detailed post on emailing from Amazon&amp;rsquo;s infrastructure soon, but in the meantime I wanted to quickly throw out solutions too a couple of problems I encountered. These are all specific too Amazon&amp;rsquo;s Route 53, and most are user error (myself).
SPF Invalid Characters or Format After generating my SPF record, I jumped into Route 53, created a new record pasted in my record, attempted to save and received the following message:</description>
    </item><item>
      <title>Unregistering From WhisperPush After Flashing a New ROM</title>
      <link>https://stelfox.net/blog/2014/07/unregistering-from-whisperpush-after-flashing-a-new-rom/</link>
      <pubDate>Tue, 22 Jul 2014 21:54:59 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2014/07/unregistering-from-whisperpush-after-flashing-a-new-rom/</guid>
      <description>I&amp;rsquo;ve been playing around with my Nexus 5 lately. It was quickly rooted and I began playing with various ROMs that had been pre-built for the Nexus 5. My first stop was the CyanogenMod. Since I&amp;rsquo;d last used CyanogenMod they added a built-in framework that provides transparent text message encryption called WhisperPush.
WhisperPush is an implementation of Moxie Marlinspike&amp;rsquo;s highly respected TextSecure and I was very excited at the possibility of using it.</description>
    </item><item>
      <title>Calculating RSA Key Fingerprints in Ruby</title>
      <link>https://stelfox.net/blog/2014/04/calculating-rsa-key-fingerprints-in-ruby/</link>
      <pubDate>Mon, 21 Apr 2014 18:37:04 -0400</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2014/04/calculating-rsa-key-fingerprints-in-ruby/</guid>
      <description>I regularly find myself working on projects that involve the manipulation and storage of RSA keys. In the past I&amp;rsquo;ve never had to worry about identification or presentation of these keys. Normally I&amp;rsquo;ve only got one too three pairs at most that I&amp;rsquo;m manipulating (server, certificate authority, client).
I&amp;rsquo;ve not found myself working on a project that involves presenting the certificates to users for selection and comparison. The obvious way too do this is take a page out of other developer&amp;rsquo;s books and present the key&amp;rsquo;s fingerprint.</description>
    </item><item>
      <title>Creating Crypt Style SHA512 Passwords With Ruby</title>
      <link>https://stelfox.net/blog/2014/02/creating-crypt-style-sha512-passwords-with-ruby/</link>
      <pubDate>Mon, 17 Feb 2014 15:28:27 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2014/02/creating-crypt-style-sha512-passwords-with-ruby/</guid>
      <description>I needed to generate crypt-style SHA512 passwords in ruby for an /etc/shadow file. After a bunch of Googling and messing around with the OpenSSL library I finally found a very simple built-in way to handle this.
require &amp;#39;securerandom&amp;#39; &amp;#39;password&amp;#39;.crypt(&amp;#39;$6$&amp;#39; + SecureRandom.random_number(36 ** 8).to_s(36)) You&amp;rsquo;ll get a string that looks like:
$6$4dksjo1b$Lt194Dwy7r/7WbM8MezYZysmGcxjaiisgTrTBbHkyBZFXeqQTG0J5hep4wLM/AmYxlGNLRy0OWATLDZCqjwCk.  If you don&amp;rsquo;t want to use the SecureRandom module you can replace the random call with simply rand(36 ** 8) though this isn&amp;rsquo;t recommended.</description>
    </item><item>
      <title>Using VIM as Your Password Manager</title>
      <link>https://stelfox.net/blog/2013/11/using-vim-as-your-password-manager/</link>
      <pubDate>Mon, 25 Nov 2013 15:10:46 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2013/11/using-vim-as-your-password-manager/</guid>
      <description>There are all kinds of password managers out there. Everything from web services that are quite solid and respectable, to native desktop apps.
A lot of these are simply too heavy for me, involve installing software on a computer to access in addition to sharing the file around, or required you to remember multiple account details before you could get access to any individual password.
Due too the various complexities and lack of matching use cases a couple years ago I set out to develop my own open-source version of PassPack.</description>
    </item><item>
      <title>Keep Your Gems Updated</title>
      <link>https://stelfox.net/blog/2012/11/keep-your-gems-updated/</link>
      <pubDate>Tue, 27 Nov 2012 14:17:00 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2012/11/keep-your-gems-updated/</guid>
      <description>I recently went back through my backups recently and found quite a few old abandoned projects. Looking back on the code I see some things I&amp;rsquo;m impressed with, but the majority of the code I wouldn&amp;rsquo;t write today. That&amp;rsquo;s not to say the code is bad, or doesn&amp;rsquo;t function. It did exactly what I wanted to accomplish at the time, just not necessarily in the most efficient way.
This archive of old code made me start wondering how much old code I&amp;rsquo;m using in the projects that I&amp;rsquo;m currently writing.</description>
    </item><item>
      <title>Auditing Heroku SSH Keys</title>
      <link>https://stelfox.net/blog/2012/11/auditing-heroku-ssh-keys/</link>
      <pubDate>Mon, 26 Nov 2012 10:18:00 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2012/11/auditing-heroku-ssh-keys/</guid>
      <description>A good friend of mine recently left the organization I work for and the task of resetting our passwords and auditing credentials fell on me. Since we use Heroku for our development platform I needed to not only reset the credentials for the web portion (which conveniently also handles resetting the API key) but also revoke any SSH keys he may have added to access it.
Sadly Heroku does not seem to provide any web interface that I could find for examining what keys were associated with the account.</description>
    </item><item>
      <title>Thoughts on IPv6 Security and Mitigation</title>
      <link>https://stelfox.net/blog/2012/07/thoughts-on-ipv6-security-and-mitigation/</link>
      <pubDate>Sun, 22 Jul 2012 03:07:42 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2012/07/thoughts-on-ipv6-security-and-mitigation/</guid>
      <description>I setup IPv6 on my home network with an OpenWRT router and Hurricane Electric and now I suddenly have an opinion on the state of IPv6 security. This is something that I&amp;rsquo;ve been meaning to do for some time and have been mulling over in the back of my mind. I&amp;rsquo;ll go over the details from start to finish of setting up hurricane electric on the router in another post as the information to do so is very scattered and disjointed.</description>
    </item><item>
      <title>The Home Network and NAT as a Security Layer</title>
      <link>https://stelfox.net/blog/2011/02/the-home-network-and-nat-as-a-security-layer/</link>
      <pubDate>Thu, 17 Feb 2011 18:15:02 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2011/02/the-home-network-and-nat-as-a-security-layer/</guid>
      <description>One of the hot-topics for IPv6 (which I have been thinking about a lot lately) is NAT. I normally wouldn&amp;rsquo;t go into detail about specifics that are obvious to people in my field but for the sake of this post I will. NAT or Network Address Translation, is a way for a large number of computers to share a single public IP address.
The router that is handling the NAT will keep track of connections coming in and out of it and re-write the destination IP to an internal address to keep the traffic flowing.</description>
    </item><item>
      <title>Tails Setup Notes</title>
      <link>https://stelfox.net/notes/tails-setup-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/notes/tails-setup-notes/</guid>
      <description>This is relevant for TAILS version 2.5 and basically follows their install guide.
I needed 2 USB sticks each at least 4Gb in size, and a spare laptop to take these notes on and read the instructions.
I downloaded a copy of the Tails GPG key from several machines located on wildly disparate internet connections like so:
curl -s https://tails.boum.org/tails-signing.key -o tails-signing-local.key for i in ircp io proc; do ssh $i &amp;#39;curl -s https://tails.</description>
    </item></channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux - Sam Stelfox&#39;s Thoughts &amp; Notes</title>
    <link>https://stelfox.net/tags/linux/</link>
    <description>Recent content in linux - Sam Stelfox&#39;s Thoughts &amp; Notes</description>
    <language>en-US</language>
    <managingEditor>Sam Stelfox</managingEditor>
    <webMaster>Sam Stelfox</webMaster><atom:link href="https://stelfox.net/tags/linux/atom.xml" rel="self" type="application/rss+xml" /><item>
      <title>Hosting Your Own Private Git Repo</title>
      <link>https://stelfox.net/blog/2018/12/hosting-your-own-private-git-repo/</link>
      <pubDate>Fri, 21 Dec 2018 18:53:30 +0000</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/12/hosting-your-own-private-git-repo/</guid>
      <description>Git was built and developed with the intention of being a distributed reversion control system. Most people now use it with one or another central repository even when working on large teams which is perfectly fine if that model works for you and your team.
It can be useful to quickly work with others on private repositories without requiring them to get on your platform of choice, or for sensitive repositories keep the repository entirely under your control.</description>
    </item><item>
      <title>Performance Impact of OpenVPN Port Sharing</title>
      <link>https://stelfox.net/blog/2018/11/performance-impact-of-openvpn-port-sharing/</link>
      <pubDate>Sun, 04 Nov 2018 19:38:35 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/11/performance-impact-of-openvpn-port-sharing/</guid>
      <description>I recently had cause to use OpenVPN on the standard HTTPS port to protect my traffic. This was done as a compromise with administrators who didn&amp;rsquo;t want to change their egress filtering, but wanted to allow me to continue doing my normal work.
I already run several webservers, including this one, and didn&amp;rsquo;t want to give up exclusive access to the precious TCP port 443. The recommended way to deal with this is to make use of the port-share option built into OpenVPN.</description>
    </item><item>
      <title>Run Your Own DNS-over-TLS Server</title>
      <link>https://stelfox.net/blog/2018/11/run-your-own-dns-over-tls-server/</link>
      <pubDate>Fri, 02 Nov 2018 15:09:02 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/11/run-your-own-dns-over-tls-server/</guid>
      <description>DNS-over-TLS is a relatively new privacy enhancing protocol that encrypts all of your DNS requests to a trusted server. In an age when airports, and coffee shops are outsourcing &amp;lsquo;free wifi&amp;rsquo; to corporate entities that are likely harvesting as much data as they can this is a nice addition. I largely use VPNs when connected to these access points which provides at least as good protection as DNS-over-TLS which has caused me to largely overlook this development.</description>
    </item><item>
      <title>Weird CloudFlare Behavior</title>
      <link>https://stelfox.net/blog/2018/10/weird-cloudflare-behavior/</link>
      <pubDate>Sun, 21 Oct 2018 22:36:09 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/10/weird-cloudflare-behavior/</guid>
      <description>While working on a replacement webserver, I encountered some odd behavior which took a bit to track down to CloudFlare. This isn&amp;rsquo;t a bug or an issue with CloudFlare, it was just unexpected.
The server was configured to respond to www.example.tld as well as example.tld, to both encrypted and unencrypted connections. Any requests to the www. domain get redirected to https://example.tld. The config was roughly:
server { listen 80; listen [::]:80; listen 443 ssl http2; listen [::]:443 ssl http2; server_name www.</description>
    </item><item>
      <title>It&#39;s Never the Firewall</title>
      <link>https://stelfox.net/blog/2018/10/its-never-the-firewall/</link>
      <pubDate>Sun, 14 Oct 2018 13:36:09 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/10/its-never-the-firewall/</guid>
      <description>This last Thursday I had the privilege of giving a talk at our local Linux User Group about diagnosing firewall issues on Linux entitled &amp;ldquo;It&amp;rsquo;s Never the Firewall: Diagnosing Linux Firewall Issues&amp;rdquo;. I really enjoyed giving the talk, however, I left a few questions unanswered. While I may do a more extensive post on everything that I went through in the talk (I have been lax on writing content for this blog), this post is more to answer the outstanding questions and of course to make my slides available.</description>
    </item><item>
      <title>Timelapse of a Linux Desktop</title>
      <link>https://stelfox.net/blog/2018/06/timelapse-of-a-linux-desktop/</link>
      <pubDate>Fri, 08 Jun 2018 16:37:39 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/06/timelapse-of-a-linux-desktop/</guid>
      <description>I have the privilege of working full remote. To stay connected with our other remote workers and the main office we keep a live video conference going all the time. It&amp;rsquo;s pretty convenient and definitely allows me to continue to feel connected with the company.
During one of our stand ups, a coworker mentioned that they&amp;rsquo;d like to see how things looked over time. I have three 1440p monitors and largely leave the video conference on my right most window, which makes recording (an audio free) timelapse pretty easy with FFmpeg.</description>
    </item><item>
      <title>Quick and Silent Gigabit Packet Interception</title>
      <link>https://stelfox.net/blog/2018/05/quick-and-silent-gigabit-packet-interception/</link>
      <pubDate>Sun, 13 May 2018 00:55:09 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/05/quick-and-silent-gigabit-packet-interception/</guid>
      <description>I regularly find myself inspecting traffic on Linux systems. Usually I&amp;rsquo;m already on the client or server when doing this (such as when diagnosing weird low level app behavior, or unknown, or unusual traffic). It has been a while since I&amp;rsquo;ve needed to silently be the wire between two black boxes.
While verifying link level information about bypassing my Google Fiber Network Box I needed to be that wire again. Before I connected any wires to anything I needed to be sure I wouldn&amp;rsquo;t accidentally leak traffic as I wasn&amp;rsquo;t sure what would impact the link.</description>
    </item><item>
      <title>Converting OpenLDAP Schemas to LDIF</title>
      <link>https://stelfox.net/blog/2018/03/converting-openldap-schemas-to-ldif/</link>
      <pubDate>Sat, 24 Mar 2018 20:20:22 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/03/converting-openldap-schemas-to-ldif/</guid>
      <description>I&amp;rsquo;ve been writing software to work against an OpenLDAP instance, with a highly customized schema. The operators of the existing system only had the schema files and searching around found several elaborate ways to convert the files which I tried with mixed success. After doing the research to figure this out, it became clear I could probably have used slapcat and have dumped the active schema directly to LDIF.
As a sample of how I converted these, I&amp;rsquo;ll use the rfc2307bis.</description>
    </item><item>
      <title>Including LDIF Files in OpenLDAP</title>
      <link>https://stelfox.net/blog/2018/03/including-ldif-files-in-openldap/</link>
      <pubDate>Sat, 24 Mar 2018 20:20:22 -0600</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2018/03/including-ldif-files-in-openldap/</guid>
      <description>While setting up and OpenLDAP server I found my distribution shipped with a couple of schema files, but no equivalent LDIF files. I found ways to convert the file using slapcat and slaptest and the files were valid on their own.
I was specifically trying to bootstrap an OpenLDAP server, with it&amp;rsquo;s schema, from scratch for a CI/CD system to test against. To accomplish this I was making use of the include directive in a configuration LDIF file and saw some very odd behavior.</description>
    </item><item>
      <title>Cross-Compiling Gentoo for Xilinx Boards</title>
      <link>https://stelfox.net/blog/2017/12/cross-compiling-gentoo-for-xilinx-boards/</link>
      <pubDate>Mon, 18 Dec 2017 17:49:22 -0500</pubDate>
      <author>Sam Stelfox</author>
      <guid>https://stelfox.net/blog/2017/12/cross-compiling-gentoo-for-xilinx-boards/</guid>
      <description>Note: If you&amp;rsquo;ve come here looking to build a root filesystem for 32 bit ARM devices I suspect everything but the build tuple will be the same. The issues that need to be worked around largely packaging and profile issues that should all be the same.
I got a hold of a Zynq 7100 development board, and while I&amp;rsquo;ve played with some embedded ARM microcontrollers such as the STM32F3 series and more basic RISC style microcontrollers like Atmel&amp;rsquo;s SAMD10 and Atmega lines, I&amp;rsquo;ve never played with FPGA development before so I considered this an interesting learning opportunity.</description>
    </item></channel>
</rss>
